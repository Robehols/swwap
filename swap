from web3 import Web3
from web3.middleware import geth_poa_middleware
from web3.exceptions import TimeExhausted

# Настройки
infura_url = 'https://mainnet.infura.io/v3/YOUR_INFURA_PROJECT_ID'  # Замените на свой Infura URL
private_key = 'YOUR_PRIVATE_KEY'  # Замените на ваш приватный ключ
token_address = 'TOKEN_ADDRESS'  # Замените на адрес ERC-20 токена
amount = 0.1  # Количество токенов для свопа
gas_price = Web3.toWei('50', 'gwei')  # Устанавливаем цену газа в Gwei
gas_limit = 200000  # Лимит газа

# Устанавливаем подключение к сети Ethereum
w3 = Web3(Web3.HTTPProvider(infura_url))
w3.middleware_onion.inject(geth_poa_middleware, layer=0)

# Получаем аккаунт
account = w3.eth.account.from_key(private_key)

# Адрес Uniswap-контракта и функции
uniswap_router_address = 'UNISWAP_ROUTER_ADDRESS'  # Замените на адрес Uniswap Router контракта
uniswap_abi = [
    # Здесь нужно добавить ABI функций Uniswap Router
]

# Функция для выполнения свопа
def execute_swap():
    try:
        uniswap_router = w3.eth.contract(address=uniswap_router_address, abi=uniswap_abi)
        amount_in = w3.toWei(amount, 'ether')
        deadline = w3.eth.getBlock('latest').timestamp + 300  # Дедлайн на 5 минут

        # Получаем адрес ERC-20 токена и ETH
        token = w3.toChecksumAddress(token_address)
        eth = Web3.toChecksumAddress('0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE')

        # Выполняем своп
        txn = uniswap_router.functions.swapExactETHForTokens(
            amount_in,
            [eth, token],
            account.address,
            deadline
        ).buildTransaction({
            'from': account.address,
            'nonce': w3.eth.getTransactionCount(account.address),
            'value': w3.toWei(amount, 'ether'),
            'gas': gas_limit,
            'gasPrice': gas_price,
        })

        signed_txn = w3.eth.account.sign_transaction(txn, private_key=private_key)
        tx_hash = w3.eth.sendRawTransaction(signed_txn.rawTransaction)
        print(f"Транзакция отправлена: {w3.toHex(tx_hash)}")

    except TimeExhausted as e:
        print(f"Ошибка таймаута: {e}")
    except Exception as e:
        print(f"Произошла ошибка: {e}")

# Вызываем функцию выполнения свопа
execute_swap()
